---
import FormContainer from '~/components/ui/Form.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';

const {
  title,
  subtitle,
  inputs,
  textarea,
  disclaimer,
  button = 'Envoyer le message', // Valeur par défaut sous forme de string
  description,
  endpoint, // Assure-toi que cette variable est bien définie dans Contact.astro
  id,
  isDark = false,
  classes = {},
  bg,
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline
    title={title}
    subtitle={subtitle}
    classes={{
      container: 'intersect-once intersect-quarter motion-safe:opacity-0 motion-safe:intersect:animate-fade',
    }}
  />

  {inputs && (
    <div
      class="flex flex-col max-w-xl mx-auto rounded-lg backdrop-blur border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900 shadow p-4 sm:p-6 lg:p-8 w-full intersect-once intersect-quarter motion-safe:opacity-0 motion-safe:intersect:animate-fade"
      style="animation-delay: 200ms;"
    >
      <FormContainer
        inputs={inputs}
        textarea={textarea}
        disclaimer={disclaimer}
        button={button}
        description={description}
        endpoint={endpoint}
      />
      <!-- Message de confirmation caché par défaut -->
      <div id="confirmation-message" class="hidden text-green-500 mt-4 font-bold">
        ✅ Votre message a bien été envoyé !
      </div>
    </div>
  )}
</WidgetWrapper>

<!-- Ajout du script pour gérer l'envoi AJAX du formulaire -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("form"); // Récupère le formulaire
    const confirmationMessage = document.getElementById("confirmation-message");

    if (form && confirmationMessage) {
      form.addEventListener("submit", async (event) => {
        event.preventDefault(); // Empêche la redirection vers Formspree

        const formData = new FormData(form);

        try {
          const response = await fetch(form.action, { // Utilisation correcte de l'endpoint
            method: "POST",
            body: formData,
            headers: {
              "Accept": "application/json"
            }
          });

          if (response.ok) {
            form.reset(); // Réinitialise le formulaire après envoi
            confirmationMessage.classList.remove("hidden"); // Affiche le message de confirmation
          } else {
            alert("❌ Une erreur s'est produite. Veuillez réessayer plus tard.");
          }
        } catch (error) {
          alert("❌ Une erreur est survenue. Vérifiez votre connexion internet.");
        }
      });
    }
  });
</script>
